<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
      xsi:schemaLocation="http://www.springframework.org/schema/webflow 
      http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">
 
 <var name="orders" class="com.dtproject.model.Orders"></var>
 <on-start>
    	<evaluate expression="flowHandler.initOrders()"></evaluate>
  </on-start>
   
   <action-state id="first">
    	<evaluate expression="flowHandler.addToCart(requestParameters.pid,requestParameters.quantity,orders)" result="orders"></evaluate>
    	<transition to="checkShippingAddress"></transition>
    </action-state> 
    
    <action-state id="checkShippingAddress">
    <evaluate expression="flowHandler.checkShippingAddress()"></evaluate>
    <transition on="empty" to="addNewShippingAddress"></transition>
    <transition on="available" to="getAddress"></transition>
    </action-state>
    
    <view-state id="addNewShippingAddress" view="shippingAddress" model="orders">
    	<transition to="attachAddress" on="success" ></transition>
    	<transition to="checkShippingAddress"></transition>
    </view-state>
    
    <action-state id="getAddress">
    <evaluate expression="flowHandler.getAddress(orders)" result="orders"></evaluate>
    <transition to="chooseAddress"></transition>
    </action-state>
    
    <action-state id="attachAddress">
    <evaluate expression="flowHandler.attachAddress(orders,flowRequestContext)" result="orders"></evaluate>
    <transition to="getAddress"></transition>
    </action-state>
    
    <view-state id="chooseAddress" view="productShippingAddress" model="orders">
    <transition to="setSelectedAddress"></transition>
    </view-state>
    
    <action-state id="setSelectedAddress">
    <evaluate expression="flowHandler.sAddress(orders)" result="orders"></evaluate>
    <transition to="setPayment"></transition>
    </action-state>
    
    <view-state id="setPayment" view="payment" model="orders">
    <transition on="paySuccess" to="checkOut"></transition>
    </view-state>
    
    <view-state id="checkOut" view="checkout" model="orders">
    <transition on="checkoutSuccess" to="saveOrder"></transition>
   </view-state>
    
  <action-state id="saveOrder">
  <evaluate expression="flowHandler.saveOrder(orders)"></evaluate>
  <transition on="success" to="toHome"></transition>
  
  </action-state> 
  <end-state id="toHome" view="home"></end-state> 
 </flow>